name: Anchor Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  anchor-test:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full

    steps:
      - uses: actions/checkout@v3

      # Node.js for JS/TS tests
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      # Cache npm packages
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-

      # Install npm deps
      - run: npm ci

      # Install Rust (for BPF build)
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      # Cache cargo registry & target
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-

      # Solana CLI cache
      - name: Cache Solana CLI
        uses: actions/cache@v3
        with:
          path: ~/.local/share/solana
          key: solana-cli-${{ runner.os }}-stable
          restore-keys: solana-cli-

      # Install Solana CLI if missing
      - name: Install Solana
        run: |
          if ! command -v solana >/dev/null; then
            sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"
            # export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
            echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          fi
          solana --version

      # Anchor CLI cache (optional: cache avm and ~/.local/share/anchor)
      - name: Cache Anchor CLI
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/anchor
          key: anchor-cli-${{ runner.os }}-latest
          restore-keys: anchor-cli-

      # Install Anchor
      - name: Install Anchor
        run: |
          if ! command -v anchor >/dev/null; then
            cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
            avm install latest
            avm use latest
          fi
          anchor --version

      # Build program
      - name: Build Program
        run: anchor build

      # Run Anchor tests
      - name: Run Anchor Tests
        run: anchor test --skip-deploy
